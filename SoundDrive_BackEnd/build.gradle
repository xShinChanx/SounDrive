plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.4.0.2513"
    id 'jacoco'
}


group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core:8.5.12'
    implementation 'org.flywaydb:flyway-mysql:8.5.12'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.2'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework:spring-context:5.3.20'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.mockito:mockito-core:3.+"
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "SoundDrive"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "sqp_1ec83de62ba370ad6be972525d24d212b4f52b9f"
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "*/configuration/"
            ])
        }))
    }
}

tasks.named('sonarqube').configure{
    dependsOn jacocoTestReport;
}

